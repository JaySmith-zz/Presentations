 
 
 
 
 
 
 
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.208
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets0FC1239392C3790942F6442DE20134B4F36276A026FB29759446CAC0631FA8C8))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets0FC1239392C3790942F6442DE20134B4F36276A026FB29759446CAC0631FA8C8 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets0FC1239392C3790942F6442DE20134B4F36276A026FB29759446CAC0631FA8C8()
        {
            this.EdmEntityContainerName = "SchoolEntities";
            this.StoreEntityContainerName = "SchoolModelStoreContainer";
            this.HashOverMappingClosure = "baf1525ae9733f4e7f1373aa2bafa0f6bf58d79f6163bf7a5426323e5e33f598";
            this.HashOverAllExtentViews = "6d873cf14e92a257c039b7a2454f67e6418c619aa8ef112da89666f2b1d5cbe4";
            this.ViewCount = 18;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for SchoolModelStoreContainer.Course
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolModelStoreContainer.Course", @"
    SELECT VALUE -- Constructing Course
        [SchoolModel.Store.Course](T1.Course_CourseID, T1.Course_Title, T1.Course_Credits, T1.Course_DepartmentID)
    FROM (
        SELECT 
            T.CourseID AS Course_CourseID, 
            T.Title AS Course_Title, 
            T.Credits AS Course_Credits, 
            T.DepartmentID AS Course_DepartmentID, 
            True AS _from0
        FROM SchoolEntities.Courses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SchoolModelStoreContainer.Department
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolModelStoreContainer.Department", @"
    SELECT VALUE -- Constructing Department
        [SchoolModel.Store.Department](T1.Department_DepartmentID, T1.Department_Name, T1.Department_Budget, T1.Department_StartDate, T1.Department_Administrator)
    FROM (
        SELECT 
            T.DepartmentID AS Department_DepartmentID, 
            T.Name AS Department_Name, 
            T.Budget AS Department_Budget, 
            T.StartDate AS Department_StartDate, 
            T.Administrator AS Department_Administrator, 
            True AS _from0
        FROM SchoolEntities.Departments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SchoolModelStoreContainer.OfficeAssignment
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolModelStoreContainer.OfficeAssignment", @"
    SELECT VALUE -- Constructing OfficeAssignment
        [SchoolModel.Store.OfficeAssignment](T1.OfficeAssignment_InstructorID, T1.OfficeAssignment_Location, T1.OfficeAssignment_Timestamp)
    FROM (
        SELECT 
            T.InstructorID AS OfficeAssignment_InstructorID, 
            T.Location AS OfficeAssignment_Location, 
            T.Timestamp AS OfficeAssignment_Timestamp, 
            True AS _from0
        FROM SchoolEntities.OfficeAssignments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SchoolModelStoreContainer.OnlineCourse
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolModelStoreContainer.OnlineCourse", @"
    SELECT VALUE -- Constructing OnlineCourse
        [SchoolModel.Store.OnlineCourse](T1.OnlineCourse_CourseID, T1.OnlineCourse_URL)
    FROM (
        SELECT 
            T.CourseID AS OnlineCourse_CourseID, 
            T.URL AS OnlineCourse_URL, 
            True AS _from0
        FROM SchoolEntities.OnlineCourses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SchoolModelStoreContainer.OnsiteCourse
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolModelStoreContainer.OnsiteCourse", @"
    SELECT VALUE -- Constructing OnsiteCourse
        [SchoolModel.Store.OnsiteCourse](T1.OnsiteCourse_CourseID, T1.OnsiteCourse_Location, T1.OnsiteCourse_Days, T1.OnsiteCourse_Time)
    FROM (
        SELECT 
            T.CourseID AS OnsiteCourse_CourseID, 
            T.Location AS OnsiteCourse_Location, 
            T.Days AS OnsiteCourse_Days, 
            T.Time AS OnsiteCourse_Time, 
            True AS _from0
        FROM SchoolEntities.OnsiteCourses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SchoolModelStoreContainer.Person
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolModelStoreContainer.Person", @"
    SELECT VALUE -- Constructing Person
        [SchoolModel.Store.Person](T1.Person_PersonID, T1.Person_LastName, T1.Person_FirstName, T1.Person_HireDate, T1.Person_EnrollmentDate)
    FROM (
        SELECT 
            T.PersonID AS Person_PersonID, 
            T.LastName AS Person_LastName, 
            T.FirstMidName AS Person_FirstName, 
            TREAT(T AS [SchoolModel.Instructor]).HireDate AS Person_HireDate, 
            TREAT(T AS [SchoolModel.Student]).EnrollmentDate AS Person_EnrollmentDate, 
            True AS _from0, 
            CASE WHEN T IS OF (ONLY [SchoolModel.Instructor]) THEN True ELSE False END AS _from1, 
            CASE WHEN T IS OF (ONLY [SchoolModel.Student]) THEN True ELSE False END AS _from2
        FROM SchoolEntities.People AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SchoolModelStoreContainer.StudentGrade
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolModelStoreContainer.StudentGrade", @"
    SELECT VALUE -- Constructing StudentGrade
        [SchoolModel.Store.StudentGrade](T1.StudentGrade_EnrollmentID, T1.StudentGrade_CourseID, T1.StudentGrade_StudentID, T1.StudentGrade_Grade)
    FROM (
        SELECT 
            T.EnrollmentID AS StudentGrade_EnrollmentID, 
            T.CourseID AS StudentGrade_CourseID, 
            T.StudentID AS StudentGrade_StudentID, 
            T.Grade AS StudentGrade_Grade, 
            True AS _from0
        FROM SchoolEntities.StudentGrades AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SchoolModelStoreContainer.CourseInstructor
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolModelStoreContainer.CourseInstructor", @"
    SELECT VALUE -- Constructing CourseInstructor
        [SchoolModel.Store.CourseInstructor](T1.CourseInstructor_CourseID, T1.CourseInstructor_PersonID)
    FROM (
        SELECT 
            Key(T.Course).CourseID AS CourseInstructor_CourseID, 
            Key(T.Person).PersonID AS CourseInstructor_PersonID, 
            True AS _from0
        FROM SchoolEntities.CourseInstructor AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SchoolEntities.Courses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolEntities.Courses", @"
    SELECT VALUE -- Constructing Courses
        [SchoolModel.Course](T1.Course_CourseID, T1.Course_Title, T1.Course_Credits, T1.Course_DepartmentID)
    FROM (
        SELECT 
            T.CourseID AS Course_CourseID, 
            T.Title AS Course_Title, 
            T.Credits AS Course_Credits, 
            T.DepartmentID AS Course_DepartmentID, 
            True AS _from0
        FROM SchoolModelStoreContainer.Course AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SchoolEntities.Departments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolEntities.Departments", @"
    SELECT VALUE -- Constructing Departments
        [SchoolModel.Department](T1.Department_DepartmentID, T1.Department_Name, T1.Department_Budget, T1.Department_StartDate, T1.Department_Administrator)
    FROM (
        SELECT 
            T.DepartmentID AS Department_DepartmentID, 
            T.Name AS Department_Name, 
            T.Budget AS Department_Budget, 
            T.StartDate AS Department_StartDate, 
            T.Administrator AS Department_Administrator, 
            True AS _from0
        FROM SchoolModelStoreContainer.Department AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SchoolEntities.OfficeAssignments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolEntities.OfficeAssignments", @"
    SELECT VALUE -- Constructing OfficeAssignments
        [SchoolModel.OfficeAssignment](T1.OfficeAssignment_InstructorID, T1.OfficeAssignment_Location, T1.OfficeAssignment_Timestamp)
    FROM (
        SELECT 
            T.InstructorID AS OfficeAssignment_InstructorID, 
            T.Location AS OfficeAssignment_Location, 
            T.Timestamp AS OfficeAssignment_Timestamp, 
            True AS _from0
        FROM SchoolModelStoreContainer.OfficeAssignment AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SchoolEntities.OnlineCourses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolEntities.OnlineCourses", @"
    SELECT VALUE -- Constructing OnlineCourses
        [SchoolModel.OnlineCourse](T1.OnlineCourse_CourseID, T1.OnlineCourse_URL)
    FROM (
        SELECT 
            T.CourseID AS OnlineCourse_CourseID, 
            T.URL AS OnlineCourse_URL, 
            True AS _from0
        FROM SchoolModelStoreContainer.OnlineCourse AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SchoolEntities.OnsiteCourses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolEntities.OnsiteCourses", @"
    SELECT VALUE -- Constructing OnsiteCourses
        [SchoolModel.OnsiteCourse](T1.OnsiteCourse_CourseID, T1.OnsiteCourse_Location, T1.OnsiteCourse_Days, T1.OnsiteCourse_Time)
    FROM (
        SELECT 
            T.CourseID AS OnsiteCourse_CourseID, 
            T.Location AS OnsiteCourse_Location, 
            T.Days AS OnsiteCourse_Days, 
            T.Time AS OnsiteCourse_Time, 
            True AS _from0
        FROM SchoolModelStoreContainer.OnsiteCourse AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SchoolEntities.People
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolEntities.People", @"
    SELECT VALUE -- Constructing People
        CASE
            WHEN T1._from1 THEN [SchoolModel.Instructor](T1.Person_PersonID, T1.Person_LastName, T1.Person_FirstMidName, T1.Instructor_HireDate)
            ELSE [SchoolModel.Student](T1.Person_PersonID, T1.Person_LastName, T1.Person_FirstMidName, T1.Student_EnrollmentDate)
        END
    FROM (
        SELECT 
            T.PersonID AS Person_PersonID, 
            T.LastName AS Person_LastName, 
            T.FirstName AS Person_FirstMidName, 
            T.HireDate AS Instructor_HireDate, 
            T.EnrollmentDate AS Student_EnrollmentDate, 
            True AS _from0, 
            CASE WHEN T.HireDate IS NOT NULL THEN True ELSE False END AS _from1, 
            CASE WHEN T.EnrollmentDate IS NOT NULL THEN True ELSE False END AS _from2
        FROM SchoolModelStoreContainer.Person AS T
        WHERE (T.HireDate IS NOT NULL OR T.EnrollmentDate IS NOT NULL)
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SchoolEntities.StudentGrades
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolEntities.StudentGrades", @"
    SELECT VALUE -- Constructing StudentGrades
        [SchoolModel.StudentGrade](T1.StudentGrade_EnrollmentID, T1.StudentGrade_CourseID, T1.StudentGrade_StudentID, T1.StudentGrade_Grade)
    FROM (
        SELECT 
            T.EnrollmentID AS StudentGrade_EnrollmentID, 
            T.CourseID AS StudentGrade_CourseID, 
            T.StudentID AS StudentGrade_StudentID, 
            T.Grade AS StudentGrade_Grade, 
            True AS _from0
        FROM SchoolModelStoreContainer.StudentGrade AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SchoolEntities.CourseInstructor
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolEntities.CourseInstructor", @"
    SELECT VALUE -- Constructing CourseInstructor
        [SchoolModel.CourseInstructor](T3.CourseInstructor_Course, T3.CourseInstructor_Person)
    FROM (
        SELECT -- Constructing Course
            CreateRef(SchoolEntities.Courses, row(T2.CourseInstructor_Course_CourseID),[SchoolModel.Course]) AS CourseInstructor_Course, 
            T2.CourseInstructor_Person
        FROM (
            SELECT -- Constructing Person
                CreateRef(SchoolEntities.People, row(T1.CourseInstructor_Person_PersonID),[SchoolModel.Person]) AS CourseInstructor_Person, 
                T1.CourseInstructor_Course_CourseID
            FROM (
                SELECT 
                    T.CourseID AS CourseInstructor_Course_CourseID, 
                    T.PersonID AS CourseInstructor_Person_PersonID, 
                    True AS _from0
                FROM SchoolModelStoreContainer.CourseInstructor AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for SchoolModelStoreContainer.vInstructorName
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolModelStoreContainer.vInstructorName", @"
    SELECT VALUE -- Constructing vInstructorName
        [SchoolModel.Store.vInstructorName](T1.vInstructorName_FullName, T1.vInstructorName_PersonID)
    FROM (
        SELECT 
            T.FullName AS vInstructorName_FullName, 
            T.PersonID AS vInstructorName_PersonID, 
            True AS _from0
        FROM SchoolEntities.InstructorNames AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SchoolEntities.InstructorNames
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SchoolEntities.InstructorNames", @"
    SELECT VALUE -- Constructing InstructorNames
        [SchoolModel.InstructorName](T1.InstructorName_FullName, T1.InstructorName_PersonID)
    FROM (
        SELECT 
            T.FullName AS InstructorName_FullName, 
            T.PersonID AS InstructorName_PersonID, 
            True AS _from0
        FROM SchoolModelStoreContainer.vInstructorName AS T
    ) AS T1");
        }
    }
}

 
 
